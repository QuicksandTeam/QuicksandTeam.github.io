(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{490:function(s,t,a){s.exports=a.p+"assets/img/202111062133969-16362056132692.781d1c2d.png"},557:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("你好，我是悦创。")]),s._v(" "),n("h2",{attrs:{id:"_1-初探数据种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-初探数据种类"}},[s._v("#")]),s._v(" 1. 初探数据种类")]),s._v(" "),n("p",[s._v("在正式开始学习这个小节之前你要明白，现在我们是在学习写程序。那么在写程序之前你要知道程序的作用是什么？")]),s._v(" "),n("p",[s._v("程序的主要作用是处理数据。")]),s._v(" "),n("p",[s._v("数据的种类有很多，我们在手机和电脑上看到的那些文字、数字、图片、视频、页面样式等等都是数据。这些数据都是由程序来处理并显示到屏幕上的。")]),s._v(" "),n("p",[s._v("虽然数据的种类形形色色，并且有些看起来比较复杂，但是在编程时它们实际上都是由一些非常基本的数据形式（或经过组合）来表示。")]),s._v(" "),n("p",[s._v("这些基本数据形式有哪些呢？比如有常用到的数字和字符，以及其它的诸如数组、字节序列等形式。")]),s._v(" "),n("p",[s._v("以数字和字符为例，为大家介绍下在代码中它们是怎么表示的。")]),s._v(" "),n("p",[s._v("对于数字，数字在代码中的表示形式和平时的电脑输入一样，直接书写即可：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14159")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("对于字符，和平时的书写稍有不同，Python 代码中表示字符时一定要给字符括上单引号或双引号亦或者是三引号：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'How are you?'")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'嗨！'")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""换衣来到流沙团队学习 Python，学习系统持续开发中"""')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这些不同的数据表示（书写）形式，对应着不同的数据种类，而不同的数据种类又具有不同的功能或者作用。")]),s._v(" "),n("p",[s._v("我们将代码中的数据种类称为："),n("strong",[s._v("数据类型")]),s._v("，也就是数据的类型。")]),s._v(" "),n("h2",{attrs:{id:"_2-数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型"}},[s._v("#")]),s._v(" 2. 数据类型")]),s._v(" "),n("p",[n("strong",[s._v("代码中的所有数据都是有类型的。")])]),s._v(" "),n("p",[s._v("数字所对应的数据类型有整数型以及浮点型。整数型表示整数数字，比如：0，-59，100。浮点型表示小数数字，如 -3.5，0.25，0.0。")]),s._v(" "),n("p",[s._v("字符所对应的数据类型叫字符串，所谓字符串就是一串字符。它里面可以是任意语言的字符，比如 "),n("code",[s._v("'哼哼哈嘿'")]),s._v("，"),n("code",[s._v("'Good Good Study'")]),s._v("。当然字符串里也可以只有一个字符，比如 "),n("code",[s._v("'a'")]),s._v("。")]),s._v(" "),n("p",[s._v("有一种表示「是」或「否」的类型，叫做布尔型。它的值叫布尔值，只有 True 和 False 两种取值。这就好比考试时的判断题，结果只能二选一，要么「是」要么「否」。")]),s._v(" "),n("p",[s._v("另外还有一种很特别的类型：None 型，表示什么都没有，它就一个取值 None。")]),s._v(" "),n("blockquote",[n("p",[s._v("说明：为了不增加大家的记忆负担，这里只介绍这五种基本数据类型，后续的我们慢慢掌握。")])]),s._v(" "),n("p",[s._v("考大家一个问题，在代码中 1000 和 "),n("code",[s._v("'1000'")]),s._v(" 是相同的东西吗？答案是不同，一个是数字，一个是字符串，数据类型不同。")]),s._v(" "),n("h2",{attrs:{id:"_3-数值运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-数值运算"}},[s._v("#")]),s._v(" 3. 数值运算")]),s._v(" "),n("p",[s._v("对于整数型和浮点型，因为它们都被用来表示数值，理所应当这二者可以做数值运算，也就是加减乘除等操作。")]),s._v(" "),n("p",[s._v("我们进入 Python 解释器交互模式中，输入代码试验一下这些数值运算：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("725")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("758")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 减法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 乘法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 除法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3333333333333333")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 除余")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("blockquote",[n("p",[s._v("写到这里，我是真写不下去了，我接下来不使用 Python 解释器的交互模式，我直接用 IPython，IPython 安装方便，CMD：pip install ipython")])]),s._v(" "),n("p",[s._v("可以看到，数值的加（+）、减（-）、乘（"),n("code",[s._v("*")]),s._v("）、除（/）、除余（%）都可以被计算。这些操作也是多种程序语言所通用的，除此之外 Python 还内置了次方运算（"),n("code",[s._v("**")]),s._v("）和整除（//）：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 次方")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 整除")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("这恐怕是 Python 的最简单的用法了——当作计算器！")]),s._v(" "),n("blockquote",[n("p",[s._v("说明：通常我们为了美观，会在上面的运算符号的左右各加上一个空格，如 12 - 24，2 ** 3。\n之后的代码示例中我们会添加空格。")])]),s._v(" "),n("h2",{attrs:{id:"_4-比较运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-比较运算"}},[s._v("#")]),s._v(" 4. 比较运算")]),s._v(" "),n("p",[s._v("整数型和浮点型除了数值运算外，还可以做比较运算，也就是比较两个数值的大小。比较的结果是布尔值。如：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("比较运算的运算符可以是大于（"),n("code",[s._v(">")]),s._v("），小于（"),n("code",[s._v("<")]),s._v("），大于等于（"),n("code",[s._v(">=")]),s._v("），小于等于（"),n("code",[s._v("<=")]),s._v("），等于（"),n("code",[s._v("==")]),s._v("），不等于（"),n("code",[s._v("!=")]),s._v("）。")]),s._v(" "),n("p",[s._v("其写法与数学中的比较运算很相似，但不同的是「等于」和「不等于」，尤其注意「等于」是用两个等号 "),n("code",[s._v("==")]),s._v(" 表示。")]),s._v(" "),n("h2",{attrs:{id:"_5-变量和赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-变量和赋值"}},[s._v("#")]),s._v(" 5. 变量和赋值")]),s._v(" "),n("p",[s._v("刚才我们学习了数值运算，那我们现在来算算一周有多少秒，一年有多少秒。")]),s._v(" "),n("p",[s._v("首先我们不难得出一天有 "),n("code",[s._v("60 * 60 * 24")]),s._v(" 秒。我们可以暂时把这个结果用某种方式记录下来，以便后续使用。用什么方式记录呢？我们可以使用变量。")]),s._v(" "),n("p",[n("strong",[s._v("变量其实就是编程者给代码中的某个数据所取的名字，之后的编程过程中使用这个名字就相当于使用它背后的数据。"),n("strong",[s._v("简单地来理解的话，我们可以把变量看作是代码中用于保存数据的")]),s._v("临时容器")]),s._v("。")]),s._v(" "),n("p",[s._v("创建变量的动作我们称之为定义变量。如下是定义变量的方法：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("在这里我们起了个名字 "),n("code",[s._v("seconds_per_day")]),s._v("，并且通过符号 "),n("code",[s._v("=")]),s._v(" （赋值符号）把 "),n("code",[s._v("60 * 60 * 24")]),s._v(" 的计算结果给了它。")]),s._v(" "),n("p",[n("code",[s._v("seconds_per_day")]),s._v(" 这个名字就是我们所定义的"),n("strong",[s._v("变量")]),s._v("，它的值（也就是其背后的数据）是 "),n("code",[s._v("60 * 60 * 24")]),s._v(" 的实际运算结果。也就是说我们将一天的秒数 "),n("code",[s._v("60 * 60 * 24")]),s._v(" 保存在了变量 "),n("code",[s._v("seconds_per_day")]),s._v(" 中。")]),s._v(" "),n("p",[s._v("“等号”（=） 在代码中是"),n("strong",[s._v("赋值")]),s._v("的意思，"),n("strong",[s._v("表示将 "),n("strong",[n("code",[s._v("**=**")])]),s._v(" 右边的值赋予 "),n("strong",[n("code",[s._v("**=**")])]),s._v(" 左边的变量")]),s._v("。"),n("strong",[s._v("注意赋值用等号 = 表示，而「等于」用 == （连续两个等号）表示。")])]),s._v(" "),n("p",[s._v("执行刚才的代码后，紧接着输入 "),n("code",[s._v("seconds_per_day")]),s._v(" 可以看到这个变量的值：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("86400")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("回到「一周有多少秒」的问题上去。我们有了表示一天的秒数的 "),n("code",[s._v("seconds_per_day")]),s._v(" 变量，那我们的程序就可以这样写下去：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("604800")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("一天的秒数乘以七（天），最终结果是 604800，没有任何问题。")]),s._v(" "),n("p",[s._v("刚才的完整连贯代码是：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("86400")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("604800")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"_6-变量的好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-变量的好处"}},[s._v("#")]),s._v(" 6. 变量的好处")]),s._v(" "),n("p",[n("strong",[s._v("你可能会说「一周的秒数，直接计算 60 * 60 * 24 * 7 不就好了，也用不着使用变量」？")])]),s._v(" "),n("p",[n("strong",[s._v("是的，有时确实可以不使用变量。但使用变量有一个好处，那就是可以暂存一个中间结果，方便之后去重复利用它。")])]),s._v(" "),n("p",[s._v("比如我们现在还想要再算一下「一年有多少秒」，因为前面已经算好了一天的秒数 "),n("code",[s._v("seconds_per_day")]),s._v("，所以可以直接拿来利用：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" seconds_per_day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("31536000")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("**除此之外变量的好处还有，你可以通过妥当的变量名字来改善程序的可读性（阅读的容易程度）。**比如我们在代码里写下 "),n("code",[s._v("60 * 60 * 24")]),s._v("，别人（包括未来的你自己）在阅读时很难一下子理解这串运算表示什么。但是如果这样写呢： "),n("code",[s._v("seconds_per_day = 60 * 60 * 24")]),s._v("。噢，原来是指一天的秒数。")]),s._v(" "),n("h2",{attrs:{id:"_7-用赋值更新变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-用赋值更新变量"}},[s._v("#")]),s._v(" 7. 用赋值更新变量")]),s._v(" "),n("p",[s._v("前面内容中的变量是在定义的时候被赋值的，其实变量被定义后也可以反复给这个变量赋予新的值，这样变量中的数据就被更新了。如：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("In "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\nIn "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" day\nOut"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"_8-变量和数据类型的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-变量和数据类型的关系"}},[s._v("#")]),s._v(" 8. 变量和数据类型的关系")]),s._v(" "),n("p",[n("strong",[s._v("变量用来保存数据，而数据类型用来指明数据的种类。")])]),s._v(" "),n("p",[s._v("刚才我们使用了 "),n("code",[s._v("seconds_per_day = 60 * 60 * 24")]),s._v(" 语句来定义变量 "),n("code",[s._v("seconds_per_day")]),s._v("，并将它赋值为 "),n("code",[s._v("60 * 60 * 24")]),s._v("。因为变量 "),n("code",[s._v("seconds_per_day")]),s._v(" 中保存的是个整数型的值，所以我们说 "),n("code",[s._v("seconds_per_day")]),s._v(" 是个整数型（的）变量。")]),s._v(" "),n("h2",{attrs:{id:"_9-总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-总结"}},[s._v("#")]),s._v(" 9. 总结")]),s._v(" "),n("h3",{attrs:{id:"_9-1-数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-数据类型"}},[s._v("#")]),s._v(" 9.1 数据类型")]),s._v(" "),n("p",[s._v("这个章节中我们提到的 Python 基础数据类型有：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("类型")]),s._v(" "),n("th",[s._v("表示")]),s._v(" "),n("th",[s._v("取值示例")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("整数型")]),s._v(" "),n("td",[s._v("整数")]),s._v(" "),n("td",[n("code",[s._v("-59")]),s._v("，"),n("code",[s._v("100")])])]),s._v(" "),n("tr",[n("td",[s._v("浮点型")]),s._v(" "),n("td",[s._v("小数")]),s._v(" "),n("td",[n("code",[s._v("-3.5")]),s._v("，"),n("code",[s._v("0.01")])])]),s._v(" "),n("tr",[n("td",[s._v("字符串")]),s._v(" "),n("td",[s._v("文本")]),s._v(" "),n("td",[n("code",[s._v("'哼哼哈嘿'")]),s._v("，"),n("code",[s._v("'Good Good Study'")])])]),s._v(" "),n("tr",[n("td",[s._v("布尔型")]),s._v(" "),n("td",[s._v("是与非")]),s._v(" "),n("td",[n("code",[s._v("True")]),s._v("，"),n("code",[s._v("False")])])]),s._v(" "),n("tr",[n("td",[s._v("None 型")]),s._v(" "),n("td",[s._v("什么都没有")]),s._v(" "),n("td",[n("code",[s._v("None")])])])])]),s._v(" "),n("p",[s._v("Python 中的数据类型不止这些，之后会渐渐涉及，表格中的这些类型也会在之后被应用到。")]),s._v(" "),n("h3",{attrs:{id:"_9-2-数值运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-数值运算"}},[s._v("#")]),s._v(" 9.2 数值运算")]),s._v(" "),n("p",[s._v("数值运算的符号有：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")]),s._v(" "),n("th",[s._v("示例")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("code",[s._v("+")])]),s._v(" "),n("td",[s._v("加法")]),s._v(" "),n("td",[n("code",[s._v("1 + 1")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("-")])]),s._v(" "),n("td",[s._v("减法")]),s._v(" "),n("td",[n("code",[s._v("2 - 3")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("*")])]),s._v(" "),n("td",[s._v("乘法")]),s._v(" "),n("td",[n("code",[s._v("4 * 5")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("/")])]),s._v(" "),n("td",[s._v("除法")]),s._v(" "),n("td",[n("code",[s._v("6 / 7")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("%")])]),s._v(" "),n("td",[s._v("取余")]),s._v(" "),n("td",[n("code",[s._v("8 % 9")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("**")])]),s._v(" "),n("td",[s._v("次方")]),s._v(" "),n("td",[n("code",[s._v("2 ** 3")]),s._v("（2 的 3 次方）")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("//")])]),s._v(" "),n("td",[s._v("整除")]),s._v(" "),n("td",[n("code",[s._v("5 // 4")])])])])]),s._v(" "),n("h3",{attrs:{id:"_9-3-数值比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-数值比较"}},[s._v("#")]),s._v(" 9.3 数值比较")]),s._v(" "),n("p",[s._v("数值比较的符号有：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("code",[s._v(">")])]),s._v(" "),n("td",[s._v("大于")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("<")])]),s._v(" "),n("td",[s._v("小于")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v(">=")])]),s._v(" "),n("td",[s._v("大于等于")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("<=")])]),s._v(" "),n("td",[s._v("小于等于")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("==")])]),s._v(" "),n("td",[s._v("等于")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("!=")])]),s._v(" "),n("td",[s._v("不等于")])])])]),s._v(" "),n("p",[s._v("上面的内容看起来罗列了很多，但其实不会带来记忆负担。数值运算和数值比较与数学上的概念和符号大致相同，略有区别而已。")]),s._v(" "),n("h3",{attrs:{id:"_9-4-变量和赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-变量和赋值"}},[s._v("#")]),s._v(" 9.4 变量和赋值")]),s._v(" "),n("p",[s._v("我们通过以下形式来定义变量和赋值：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[s._v("变量名 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 数据值\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_9-5-多语言比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-多语言比较"}},[s._v("#")]),s._v(" 9.5 多语言比较：")]),s._v(" "),n("p",[s._v("「多语言比较」这部分内容，是为让大家了解本章节所介绍的语言基本特性在其它语言中是如何表达的。大家可以了解体会它们之间的相识之处。")]),s._v(" "),n("p",[s._v("不同于动态类型的 Python，在静态类型的语言中数据类型还有长度一说，也就是类型所能容纳的数据大小。")]),s._v(" "),n("p",[s._v("并且变量在定义时还需先声明它的类型。以整数型为例。")]),s._v(" "),n("p",[s._v("Java 中的整数型根据长度的不同分为：")]),s._v(" "),n("ul",[n("li",[s._v("byte（1 字节）")]),s._v(" "),n("li",[s._v("short（2 字节）")]),s._v(" "),n("li",[s._v("int（4 字节）")]),s._v(" "),n("li",[s._v("long（8 字节）")]),s._v(" "),n("li",[s._v("浮点型分为 float（4 字节）")]),s._v(" "),n("li",[s._v("double（8 字节）")])]),s._v(" "),n("p",[s._v("其它语言也有一些类似。C/C++ 中的整数型有「有无符号」之分（如 unsigned int 表示无符号的 int 型，也就是说这只能表示 0 和正数，不能表示负数）。")]),s._v(" "),n("p",[n("strong",[s._v("Java 定义变量并初始化：")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" yearDays "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("C/C++ 定义变量并初始化：")])]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" yearDays "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("把 C 和 C++ 合并称为 C/C++，是因为 C++ 基本上是 C 的强大很多的超集，虽然 C++ 严格来说不是 100% 兼容 C，但几乎是兼容的。")]),s._v(" "),n("p",[n("strong",[s._v("Go 语言定义变量并初始化：")])]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" yearDays "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("Go 语言中的变量定义需要加上关键字 var，且数据类型（这里是 int）放在变量名后面。或者采用另一种写法：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("yearDays "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这种写法不但可以省略关键字 var 还可以省略数据类型，数据类型可直接由编译器推导出来。")]),s._v(" "),n("p",[s._v("以上语言在变量定义后，都可通过下述语句再次赋值：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("yearDays "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("366")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[s._v("流沙团队推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！")]),s._v(" "),n("p",[s._v("方法一："),n("a",{attrs:{href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"}},[s._v("QQ"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("方法二：微信：Jiabcdefh")])]),s._v(" "),n("p",[n("strong",[s._v("答疑请加入知识星球，关于专栏的问题，有问必答！")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(490),alt:"知识星球"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);
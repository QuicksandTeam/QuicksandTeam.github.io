"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderPage = void 0;
const server_renderer_1 = require("@vue/server-renderer");
const utils_1 = require("@vuepress/utils");
const renderPagePrefetchLinks_1 = require("./renderPagePrefetchLinks");
const renderPagePreloadLinks_1 = require("./renderPagePreloadLinks");
const renderPageScripts_1 = require("./renderPageScripts");
const renderPageStyles_1 = require("./renderPageStyles");
const resolvePageClientFilesMeta_1 = require("./resolvePageClientFilesMeta");
/**
 * Render page to html file, return the html file path
 */
const renderPage = async ({ app, page, vueApp, vueRouter, ssrTemplate, allFilesMeta, initialFilesMeta, asyncFilesMeta, moduleFilesMetaMap, }) => {
    // switch to current page route
    await vueRouter.push(page.path);
    await vueRouter.isReady();
    // create vue ssr context with default values
    const ssrContext = {
        _registeredComponents: new Set(),
        lang: 'en',
        head: [],
    };
    // render current page to string
    const pageRendered = await server_renderer_1.renderToString(vueApp, ssrContext);
    // resolve client files that used by this page
    const pageClientFilesMeta = resolvePageClientFilesMeta_1.resolvePageClientFilesMeta({
        moduleRequests: Array.from(ssrContext._registeredComponents),
        moduleFilesMetaMap,
    });
    // generate html string
    const html = ssrTemplate
        // vuepress version
        .replace('{{ version }}', app.version)
        // page lang
        .replace('{{ lang }}', ssrContext.lang)
        // page head
        .replace('<!--vuepress-ssr-head-->', ssrContext.head.map(utils_1.renderHead).join(''))
        // page preload & prefetch links
        .replace('<!--vuepress-ssr-resources-->', `${renderPagePreloadLinks_1.renderPagePreloadLinks({
        app,
        initialFilesMeta,
        pageClientFilesMeta,
    })}${renderPagePrefetchLinks_1.renderPagePrefetchLinks({
        app,
        asyncFilesMeta,
        pageClientFilesMeta,
    })}`)
        // page styles
        .replace('<!--vuepress-ssr-styles-->', renderPageStyles_1.renderPageStyles({ app, initialFilesMeta, pageClientFilesMeta }))
        .replace('<!--vuepress-ssr-app-->', pageRendered)
        // page scripts
        .replace('<!--vuepress-ssr-scripts-->', renderPageScripts_1.renderPageScripts({ app, initialFilesMeta, pageClientFilesMeta }));
    // write html file
    await utils_1.fs.outputFile(page.htmlFilePath, html);
};
exports.renderPage = renderPage;

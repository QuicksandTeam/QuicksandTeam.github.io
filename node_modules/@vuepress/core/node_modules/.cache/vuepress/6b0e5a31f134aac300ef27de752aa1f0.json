{"remainingRequest":"D:\\Github_pages\\QuicksandTeam.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Github_pages\\QuicksandTeam.github.io\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\Github_pages\\QuicksandTeam.github.io\\docs\\AboutTeam.md?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Github_pages\\QuicksandTeam.github.io\\docs\\AboutTeam.md","mtime":1636158563196},{"path":"D:\\Github_pages\\QuicksandTeam.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633964595791},{"path":"D:\\Github_pages\\QuicksandTeam.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1633964602389},{"path":"D:\\Github_pages\\QuicksandTeam.github.io\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1633964594030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIG91dHB1dCBmdW5jdGlvbnMgYXJlIGNvbmZpZ3VyYWJsZS4gIFRoaXMgb25lIGp1c3QgYXBwZW5kcyBzb21lIHRleHQKLy8gdG8gYSBwcmUgZWxlbWVudC4KZnVuY3Rpb24gb3V0Zih0ZXh0KSB7CiAgICB2YXIgbXlwcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib3V0cHV0Iik7CiAgICBteXByZS5pbm5lckhUTUwgPSBteXByZS5pbm5lckhUTUwgKyB0ZXh0Owp9CmZ1bmN0aW9uIGJ1aWx0aW5SZWFkKHgpIHsKICAgIGlmIChTay5idWlsdGluRmlsZXMgPT09IHVuZGVmaW5lZCB8fCBTay5idWlsdGluRmlsZXNbImZpbGVzIl1beF0gPT09IHVuZGVmaW5lZCkKICAgICAgICAgICAgdGhyb3cgIkZpbGUgbm90IGZvdW5kOiAnIiArIHggKyAiJyI7CiAgICByZXR1cm4gU2suYnVpbHRpbkZpbGVzWyJmaWxlcyJdW3hdOwp9CgovLyBIZXJlJ3MgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBydW4gYSBweXRob24gcHJvZ3JhbSBpbiBza3VscHQKLy8gZ3JhYiB0aGUgY29kZSBmcm9tIHlvdXIgdGV4dGFyZWEKLy8gZ2V0IGEgcmVmZXJlbmNlIHRvIHlvdXIgcHJlIGVsZW1lbnQgZm9yIG91dHB1dAovLyBjb25maWd1cmUgdGhlIG91dHB1dCBmdW5jdGlvbgovLyBjYWxsIFNrLmltcG9ydE1haW5XaXRoQm9keSgpCmZ1bmN0aW9uIHJ1bml0KCkgewogICB2YXIgcHJvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ5b3VyY29kZSIpLnZhbHVlOwogICB2YXIgbXlwcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib3V0cHV0Iik7CiAgIG15cHJlLmlubmVySFRNTCA9ICcnOwogICBTay5wcmUgPSAib3V0cHV0IjsKICAgU2suY29uZmlndXJlKHtvdXRwdXQ6b3V0ZiwgcmVhZDpidWlsdGluUmVhZH0pOwogICAoU2suVHVydGxlR3JhcGhpY3MgfHwgKFNrLlR1cnRsZUdyYXBoaWNzID0ge30pKS50YXJnZXQgPSAnbXljYW52YXMnOwogICB2YXIgbXlQcm9taXNlID0gU2subWlzY2V2YWwuYXN5bmNUb1Byb21pc2UoZnVuY3Rpb24oKSB7CiAgICAgICByZXR1cm4gU2suaW1wb3J0TWFpbldpdGhCb2R5KCI8c3RkaW4+IiwgZmFsc2UsIHByb2csIHRydWUpOwogICB9KTsKICAgbXlQcm9taXNlLnRoZW4oZnVuY3Rpb24obW9kKSB7CiAgICAgICBjb25zb2xlLmxvZygnc3VjY2VzcycpOwogICB9LAogICAgICAgZnVuY3Rpb24oZXJyKSB7CiAgICAgICBjb25zb2xlLmxvZyhlcnIudG9TdHJpbmcoKSk7CiAgIH0pOwp9Cg=="},{"version":3,"sources":["AboutTeam.md"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AboutTeam.md","sourceRoot":"docs","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"关于流沙团队\"><a class=\"header-anchor\" href=\"#关于流沙团队\">#</a> 关于流沙团队</h1>\n<p>你好，我是悦创。也是流沙团队的创始人之一，团队成立于 2021年11月3日。</p>\n<h3>Try This</h3>\n<form>\n<textarea id=\"yourcode\" cols=\"40\" rows=\"10\">import turtle\n<p>t = turtle.Turtle()\nt.forward(100)</p>\n<p>print(&quot;Hello World&quot;)\n</textarea><br />\n<!--<button type=\"button\" onclick=\"runit()\">Run</button>-->\n<button type=\"button\" class=\"ant-btn ant-btn-primary ant-btn-sm\" onclick=\"runit()\"><span>运行代码</span></button>\n</form>\n<pre id=\"output\" ></pre>\n<!-- If you want turtle graphics include a canvas --></p>\n<div id=\"mycanvas\"></div></ContentSlotsDistributor>\n</template>\n<script type=\"text/javascript\">\n// output functions are configurable.  This one just appends some text\n// to a pre element.\nfunction outf(text) {\n    var mypre = document.getElementById(\"output\");\n    mypre.innerHTML = mypre.innerHTML + text;\n}\nfunction builtinRead(x) {\n    if (Sk.builtinFiles === undefined || Sk.builtinFiles[\"files\"][x] === undefined)\n            throw \"File not found: '\" + x + \"'\";\n    return Sk.builtinFiles[\"files\"][x];\n}\n\n// Here's everything you need to run a python program in skulpt\n// grab the code from your textarea\n// get a reference to your pre element for output\n// configure the output function\n// call Sk.importMainWithBody()\nfunction runit() {\n   var prog = document.getElementById(\"yourcode\").value;\n   var mypre = document.getElementById(\"output\");\n   mypre.innerHTML = '';\n   Sk.pre = \"output\";\n   Sk.configure({output:outf, read:builtinRead});\n   (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';\n   var myPromise = Sk.misceval.asyncToPromise(function() {\n       return Sk.importMainWithBody(\"<stdin>\", false, prog, true);\n   });\n   myPromise.then(function(mod) {\n       console.log('success');\n   },\n       function(err) {\n       console.log(err.toString());\n   });\n}\n</script>\n\n\n"]}]}
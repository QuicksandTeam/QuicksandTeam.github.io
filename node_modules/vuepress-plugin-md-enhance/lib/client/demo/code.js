import { getConfig, preProcessorConfig } from "./utils";
export const getCode = (code) => {
    const languages = Object.keys(code);
    const result = {
        html: [],
        js: [],
        css: [],
        isLegal: false,
    };
    ["html", "js", "css"].forEach((type) => {
        const match = languages.filter((language) => preProcessorConfig[type].types.includes(language));
        if (match.length) {
            const language = match[0];
            result[type] = [
                code[language].replace(/^\n|\n$/g, ""),
                preProcessorConfig[type].map[language] || language,
            ];
        }
    });
    result.isLegal =
        (!result.html.length || result.html[1] === "none") &&
            (!result.js.length || result.js[1] === "none") &&
            (!result.css.length || result.css[1] === "none");
    return result;
};
const handleHTML = (html) => html
    .replace(/<br \/>/g, "<br>")
    .replace(/<((\S+)[^<]*?)\s+\/>/g, "<$1></$2>");
const getHtmlTemplate = (html) => `<div id="app">\n${handleHTML(html)}\n</div>`;
const getReactTemplate = (code) => `${code
    .replace("export default ", "const $reactApp = ")
    .replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/, "")};\nReactDOM.render(React.createElement($reactApp), document.getElementById("app"))`;
const getVueJsTemplate = (js) => `new Vue({ el: '#app', ${js
    .replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u, "$1")
    .replace(/export\s+default\s*Vue\.extend\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u, "$1")
    .trim()} })`;
export const wrapper = (scriptStr) => `(function(exports){var module={};module.exports=exports;${scriptStr};return module.exports.__esModule?module.exports.default:module.exports;})({})`;
export const getNormalCode = (code, config) => {
    const codeConfig = getConfig(config);
    const js = code.js[0] || "";
    return Object.assign(Object.assign({}, codeConfig), { html: handleHTML(code.html[0] || ""), js, css: code.css[0] || "", isLegal: code.isLegal, getScript: () => {
            var _a;
            return codeConfig.useBabel
                ? ((_a = window.Babel.transform(js, { presets: ["es2015"] })) === null || _a === void 0 ? void 0 : _a.code) || ""
                : js;
        } });
};
export const getVueCode = (code, config) => {
    const codeConfig = getConfig(config);
    const vueTemplate = code.html[0] || "";
    const htmlBlock = /<template>([\s\S]+)<\/template>/u.exec(vueTemplate);
    const jsBlock = /<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u.exec(vueTemplate);
    const cssBlock = /<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u.exec(vueTemplate);
    const html = htmlBlock ? htmlBlock[1].replace(/^\n|\n$/g, "") : "";
    const [js = "", jsLang = ""] = jsBlock
        ? [jsBlock[4].replace(/^\n|\n$/g, ""), jsBlock[3]]
        : [];
    const [css = "", cssLang = ""] = cssBlock
        ? [cssBlock[4].replace(/^\n|\n$/g, ""), cssBlock[3]]
        : [];
    const isLegal = jsLang === "" && (cssLang === "" || cssLang === "css");
    return Object.assign(Object.assign({}, codeConfig), { html: getHtmlTemplate(html), js: getVueJsTemplate(js), css,
        isLegal, jsLib: [codeConfig.vue, ...codeConfig.jsLib], getScript: () => {
            var _a, _b;
            const scriptStr = config.useBabel
                ? ((_b = (_a = window.Babel) === null || _a === void 0 ? void 0 : _a.transform(js, { presets: ["es2015"] })) === null || _b === void 0 ? void 0 : _b.code) || ""
                : js.replace(/export\s+default/u, "return");
            return `const appOptions=${wrapper(scriptStr)};appOptions.template=\`${html.replace("`", '\\`"')}\`;document.firstElementChild.appendChild(new (window.Vue.extend(appOptions))().$mount().$el);`;
        } });
};
export const getReactCode = (code, config) => {
    const codeConfig = getConfig(config);
    return Object.assign(Object.assign({}, codeConfig), { html: getHtmlTemplate(""), js: getReactTemplate(code.js[0] || ""), css: code.css[0] ||
            (code.js[0]
                ? code.js[0]
                    .replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/, "$1")
                    .trim()
                : ""), isLegal: code.isLegal, jsLib: [codeConfig.react, codeConfig.reactDOM, ...codeConfig.jsLib], getScript: () => {
            var _a, _b;
            const scriptStr = ((_b = (_a = window.Babel) === null || _a === void 0 ? void 0 : _a.transform(code.js[0] || "", {
                presets: ["es2015", "react"],
            })) === null || _b === void 0 ? void 0 : _b.code) || "";
            return `window.ReactDOM.render(window.React.createElement(${wrapper(scriptStr)}), document.firstElementChild)`;
        } });
};
//# sourceMappingURL=code.js.map
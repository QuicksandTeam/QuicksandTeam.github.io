export const pagesRoutes = [
  ["v-5e1332e8","/AboutTeam.html",{"title":"关于流沙团队","icon":"info","type":"article","readingTime":{"minutes":2.03,"words":610},"excerpt":"关于流沙团队 你好，我是悦创。也是流沙团队的创始人之一，由我来为你介绍我们团队。流沙团队成立于 2021年11月12日，地点：福建省厦门市（额。。。由于资金问题，工作室待定。。。） 1. LOGO 设计理念 设计日期：2021年10月24日 外形是一股风沙漩涡的形状，象征着强大的力量。又似树的年轮，象征着团队像可以像树木一样茁壮成长，生生不息。 2. 团队理"},["/AboutTeam","/AboutTeam.md"]],
  ["v-8daa1a0e","/",{"title":"主页","icon":"home","type":"home","readingTime":{"minutes":0.69,"words":206},"excerpt":""},["/index.html","/README.md"]],
  ["v-038a8aac","/column.html",{"title":"项目主页","icon":"home","type":"home","readingTime":{"minutes":2.4,"words":721},"excerpt":"如果你有其他需求或者疑问，点击：QQ 在线客服"},["/column","/column.md"]],
  ["v-fffb8e28","/guide/",{"title":"主要功能与配置演示","icon":"creative","type":"article","readingTime":{"minutes":0.13,"words":40},"excerpt":"目录 Markdown 展示; 页面展示; 禁用展示; 加密展示;","category":["使用指南"]},["/guide/index.html","/guide/README.md"]],
  ["v-7beb5be1","/posts/article9.html",{"title":"文章 9","icon":"edit","type":"article","readingTime":{"minutes":0.11,"words":33},"excerpt":"文章 9 标题 2 这里是内容。 标题 3 这里是内容。","date":"2022-01-09T00:00:00.000Z","localizedDate":"2022年1月9日","category":["CategoryA","CategoryB"],"tag":["tag A","tag B"]},["/posts/article9","/posts/article9.md"]],
  ["v-03842690","/posts/article/article1.html",{"title":"文章 1","icon":"edit","type":"article","readingTime":{"minutes":0.11,"words":32},"excerpt":"文章 1 标题 2 这里是内容。 标题 3 这里是内容。","date":"2022-01-01T00:00:00.000Z","localizedDate":"2022年1月1日","category":["CategoryA"],"tag":["tag A","tag B"]},["/posts/article/article1","/posts/article/article1.md"]],
  ["v-3706649a","/404.html",{"title":"","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/404"]],
  ["v-5bc93818","/category/",{"title":"分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/index.html"]],
  ["v-744d024e","/tag/",{"title":"标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"title":"文章","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/article/index.html"]],
  ["v-75ed4ea4","/encrypted/",{"title":"加密","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/encrypted/index.html"]],
  ["v-d804e652","/slide/",{"title":"幻灯片","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/slide/index.html"]],
  ["v-154dc4c4","/star/",{"title":"收藏","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/star/index.html"]],
  ["v-01560935","/timeline/",{"title":"时间轴","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/timeline/index.html"]],
  ["v-03d57386","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"title":"使用指南 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/使用指南/","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-06bbb262","/tag/tag-a/",{"title":"tag A 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/tag-a/index.html"]],
  ["v-3e5b7b84","/category/categorya/",{"title":"CategoryA 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/categorya/index.html"]],
  ["v-06bbb224","/tag/tag-b/",{"title":"tag B 标签","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/tag/tag-b/index.html"]],
  ["v-3e5b7ba3","/category/categoryb/",{"title":"CategoryB 分类","type":"page","readingTime":{"minutes":0,"words":0},"excerpt":""},["/category/categoryb/index.html"]],
  ["v-309686cd","/column/python/base/three_makes_Python_a_home_on_your_computer.html",{"title":"02-让 Python 在你的电脑上安家落户","type":"article","readingTime":{"minutes":4.29,"words":1287},"excerpt":"你好，我是悦创。首先，欢迎上车！ 从这一章节开始，我们正式学习 Python 相关的内容。学习 Python 不仅仅是认识和记忆它的用法，还要实际动手去操作试验，只有不断地实践才能真正掌握一门语言。所以现在的第一件事是——将 Python 安装到你电脑上，边学习边实践。 1. 安装 Python 究竟安装的是什么 我们说「安装 Python」，可是 Pyth","author":"AI悦创","category":["Python 基础"],"sticky":false},["/column/python/base/three_makes_Python_a_home_on_your_computer","/column/python/base/three_makes_Python_a_home_on_your_computer.md"]],
  ["v-78de4dc6","/column/python/base/two_how_would_i_teach_you_python.html",{"title":"01-我会怎样带你学 Python？","type":"article","readingTime":{"minutes":7.3,"words":2189},"excerpt":"你好，我是悦创。 1. 为什么需要程序语言 市面上程序语言很多，且各有不同，但无论你用什么语言来写程序，有一点你需要知道，那就是——计算机实际运行的是计算机指令序列。这些指令序列的直接表现形式是一连串的 0 和 1，也就是机器码。机器码不属于程序语言，所以程序的执行是与语言无关的，计算机在运行时感知不到你的语言。 既然计算机程序的实际执行和语言无关，那么为什","author":"AI悦创","category":["Python 基础"],"sticky":false},["/column/python/base/two_how_would_i_teach_you_python","/column/python/base/two_how_would_i_teach_you_python.md"]],
  ["v-41be01ea","/column/python/base/",{"title":"Python 零基础快速入门","icon":"home","type":"home","readingTime":{"minutes":5.04,"words":1511},"excerpt":"您好，我是悦创。 希望这个专栏在帮助你顺利掌握 Python 的同时，也能让读者领悟学习任何一门语言的高效方法。 当你打开了这篇文章，我知道你一定是个饱含学习热情的人。现在你可能对 Python 有一些想法，想要让它为你所用，但同时可能有一丝犹豫。你不知道这个专栏的深度适不适合你。放心，无论你曾经是否有编程经验，学习 Python 这个专栏都是合适你的。另外"},["/column/python/base/index.html","/column/python/base/README.md"]],
  ["v-4c7e81a9","/column/python/Officeautomation/",{"title":"Python 办公自动化","icon":"home","type":"home","readingTime":{"minutes":3.89,"words":1168},"excerpt":"您好，我是悦创，很高兴能和您一起学习 Python 办公自动化。 恭喜你在搞定 Python 基础内容之后，来到办公自动化的课程，请确保你对 Python 的数据结构、条件、循环、函数等这些基础知识已经掌握得不错，本课程中对于基本的 Python 语法不会做过多的讲解。 请记得跟流沙团队说一声，让我们把你加到微信群中，方便为你提供其他服务哦。 1. 课程概述"},["/column/python/Officeautomation/index.html","/column/python/Officeautomation/README.md"]],
  ["v-2a7493c8","/column/python/Officeautomation/Thefirstlevelgeniusteachertopreventcheating.html",{"title":"第1关 天才老师防作弊","type":"article","readingTime":{"minutes":30.07,"words":9022},"excerpt":"你好，我是悦创。 1.3 知识结构 需求描述; 试卷生成（提取 provinces 和 options、创建试卷、创建答案）; 生成答案迥异（jiǒng yì）的试卷; 2. 需求描述 小悦在日常的工作中，遇到过这样的需求：考察学员或者公司新员工的技术能力。 出一份考题让被考察者完成是一个最常用的方法。 在本文中，请你跟着老师一起，用 Python 自动化地","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/python/Officeautomation/Thefirstlevelgeniusteachertopreventcheating","/column/python/Officeautomation/Thefirstlevelgeniusteachertopreventcheating.md"]],
  ["v-3c8ef0ad","/column/python/base/how_do_i_run_Python_code.html",{"title":"03-如何运行 Python 代码？","type":"article","readingTime":{"minutes":6.78,"words":2033},"excerpt":"你好，我是悦创。 上节课我带着大家来让 Python 在我们的电脑上安家落户。既然安装成功了，那么使用起来也不是问题。运行 Python 代码有两种方式。一种是直接在 Python 解释器中的输入代码，然后就地执行它（也就是交互模式）。另一种是把 Python 代码保存到文件中，之后去执行这个文件。 1. 交互模式执行 Python 代码 先来看下如何在交互","author":"AI悦创","category":["Python 基础"],"sticky":false},["/column/python/base/how_do_i_run_Python_code","/column/python/base/how_do_i_run_Python_code.md"]],
  ["v-5a1aadce","/column/python/base/fiveNamesandtypesofdatavariablesandtypes.html",{"title":"04-数据的名字和种类—变量和类型","type":"article","readingTime":{"minutes":9.86,"words":2957},"excerpt":"你好，我是悦创。 1. 初探数据种类 在正式开始学习这个小节之前你要明白，现在我们是在学习写程序。那么在写程序之前你要知道程序的作用是什么？ 程序的主要作用是处理数据。 数据的种类有很多，我们在手机和电脑上看到的那些文字、数字、图片、视频、页面样式等等都是数据。这些数据都是由程序来处理并显示到屏幕上的。 虽然数据的种类形形色色，并且有些看起来比较复杂，但是在","author":"AI悦创","category":["Python 基础"],"sticky":false},["/column/python/base/fiveNamesandtypesofdatavariablesandtypes","/column/python/base/fiveNamesandtypesofdatavariablesandtypes.md"]],
  ["v-5dc2b7eb","/column/pypractice/",{"title":"Python 练习题","icon":"home","type":"home","readingTime":{"minutes":1.87,"words":560},"excerpt":"Pyt的练习题非常多，多到我相信会有很大一部分人会跳过这篇教程，不过请放心，不论你是因为图省事还是因为太懒了而跳过本篇教程，将来你都会再回到这里，乖乖的做这些练习题。 你好，我是悦创。 我是一名，做了三年的编程的教练，如今我会持续更新这个系列刷题专栏。 Python 的练习题非常多，多到我相信会有很大一部分人会在学习 Python 的时候会跳过诸多练习，不过"},["/column/pypractice/index.html","/column/pypractice/README.md"]],
  ["v-0600e4cc","/column/pypractice/01-list.html",{"title":"1. 列表基础考察","type":"article","readingTime":{"minutes":5.43,"words":1629},"excerpt":"1. 列表基础考察 已知一个列表：lst = [1,2,3,4,5] 1. 求列表的长度 1. 判断 6 是否在列表中 1. lst + [6, 7, 8] 的结果是什么？ 1. lst*2 的结果是什么 1. 列表里元素的最大值是多少？ 1. 列表里元素的最小值是多少？ 1. 列表里所有元素的和是多少？ 1. 在索引 1 的位置新增一个的元素 10； 1."},["/column/pypractice/01-list","/column/pypractice/01-list.md"]],
  ["v-5051696c","/column/aiycsf/",{"title":"AI悦创·算法","icon":"home","type":"article","readingTime":{"minutes":0.37,"words":110},"excerpt":""},["/column/aiycsf/index.html","/column/aiycsf/README.md"]],
  ["v-33eea326","/column/aiycsf/Week1.html",{"title":"01-Week1：Python 基础数据类型和链表","type":"article","readingTime":{"minutes":9.51,"words":2853},"excerpt":"你好，我是悦创。 我们先来看看今天要学习的内容： 列表、集合、元组、字典; 链表; 1. 你真的了解这四个数据类型吗？ 列表/list; 元组/tuple; 字典/dict; 集合/set; 1.1 列表 VS. 元组 1. 可变与不可变 1. 选择存储策略 1. 存储经纬度用：元组 1. 存储用户访问：列表 1.2 字典 VS. 集合 字典：键对值; 集合","author":"AI悦创","category":["AI悦创·算法"],"sticky":false},["/column/aiycsf/Week1","/column/aiycsf/Week1.md"]],
  ["v-9c1562d4","/column/md/moveandmuisc.html",{"title":"03-本网站使用视频和音频格式","type":"article","readingTime":{"minutes":0.8,"words":240},"excerpt":"视频 音频 \" 流沙团队推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！\" \"\" \" 方","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/moveandmuisc","/column/md/moveandmuisc.md"]],
  ["v-629f7253","/column/md/FiveMarkdowncode.html",{"title":"05-Markdown 代码","type":"article","readingTime":{"minutes":0.85,"words":255},"excerpt":"你好，我是悦创。 如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如： 显示结果如下： printf() 函数 代码区块 你也可以用 **`markdown javascript $(document).ready(function () { alert('bornforthi.com'); }); ``` \" 流沙团队推出辅导班啦，包括「","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/FiveMarkdowncode","/column/md/FiveMarkdowncode.md"]],
  ["v-a1a63d80","/column/md/SevenMarkdownpictures.html",{"title":"07-Markdown 图片","type":"article","readingTime":{"minutes":1.46,"words":438},"excerpt":"Markdown 图片语法格式如下： 开头一个感叹号 !; 接着一个方括号，里面放上图片的替代文字; 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 'title' 属性的文字。; 使用实例： 当然，你也可以像网址那样对图片网址使用变量: 显示结果如下： 这个链接用 1 作为网址变量 [bornforthi][1]. 然后在文档的结","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/SevenMarkdownpictures","/column/md/SevenMarkdownpictures.md"]],
  ["v-0fc672f2","/column/md/twoMarkdown_paragraph.html",{"title":"02-Markdown 段落","type":"article","readingTime":{"minutes":1.83,"words":548},"excerpt":"你好，我是悦创。 Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行直接回车就好。 字体 Markdown 可以使用以下几种字体： 显示效果如下所示： 分隔线 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： 显示效果如下所示： 删除线 如果段落","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/twoMarkdown_paragraph","/column/md/twoMarkdown_paragraph.md"]],
  ["v-7c92d49f","/column/md/Markdownmathematicalformulasyntax.html",{"title":"11-Markdown 数学公式语法","type":"article","readingTime":{"minutes":7.01,"words":2104},"excerpt":"你好，我是悦创。 行内与独行 1. 行内公式：将公式插入到本行内，符号：$公式内容$，如：$xyz$，效果：$xyz$ 2. 独行公式：将公式插入到新的一行内，并且居中，符号：$$公式内容$$，如：$$xyz$$，效果：$$xyz$$ 上标、下标与组合 1. 上标符号，符号：^，如：$x^4$，效果：$x^4$ 2. 下标符号，符号：，如：$x1$，效果：$","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/Markdownmathematicalformulasyntax","/column/md/Markdownmathematicalformulasyntax.md"]],
  ["v-3585a510","/column/md/Oneformatforwritingarticlesonthiswebsite.html",{"title":"01-本网站文章编写格式","type":"article","readingTime":{"minutes":5.07,"words":1522},"excerpt":"你好，我是悦创。 页面的 frontmatter 新增如下配置选项: 页面信息配置 icon 类型: string; 必填: 否; 设置当前页面图标的 FontClass (建议填写) title 类型: string; 必填: 否; 设置当前页面内容标题，默认为 Markdown 文件中的第一个 h1 标签内容。 description 类型: strin","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/Oneformatforwritingarticlesonthiswebsite","/column/md/Oneformatforwritingarticlesonthiswebsite.md"]],
  ["v-4ff7a01e","/column/md/threeMarkdown_list.html",{"title":"03-Markdown 列表","type":"article","readingTime":{"minutes":1.55,"words":464},"excerpt":"你好，我是悦创。 Markdown 支持有序列表和无序列表。 无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容： 显示结果如下： 第一项; 第二项; 第三项; 第一项; 第二项; 第三项; 第一项; 第二项; 第三项; 有序列表使用数字并加上 . 号来表示，如： 显示结果如下： 1. 第一项 2. 第二","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/threeMarkdown_list","/column/md/threeMarkdown_list.md"]],
  ["v-52868af8","/column/md/",{"title":"Markdown","icon":"home","type":"home","readingTime":{"minutes":1.69,"words":507},"excerpt":"简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。 Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown 编写的文档后缀为 .md, .markdown。 ---"},["/column/md/index.html","/column/md/README.md"]],
  ["v-f8594504","/column/md/nineMarkdownskills.html",{"title":"09-Markdown 高级技巧","type":"article","readingTime":{"minutes":1.86,"words":558},"excerpt":"你好，我是悦创。 支持的 HTML 元素 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。 目前支持的 HTML 元素有： 等 ，如： 输出结果为： 使用 Ctrl+Alt+Del 重启电脑 转义 Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/nineMarkdownskills","/column/md/nineMarkdownskills.md"]],
  ["v-bf3f6cd6","/column/md/twoCodedemo.html",{"title":"02-代码演示","type":"article","readingTime":{"minutes":3.37,"words":1011},"excerpt":"<p>让你的 VuePress 站点中的 Markdown 文件支持代码案例。</p>\n","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/twoCodedemo","/column/md/twoCodedemo.md"]],
  ["v-f1d05934","/column/md/SixMarkdownlink.html",{"title":"06-Markdown 链接","type":"article","readingTime":{"minutes":1.25,"words":375},"excerpt":"你好，我是悦创。 链接使用方法如下： 例如： 显示结果如下： 这是一个链接 流沙团队 直接使用链接地址： 显示结果如下： 高级链接 我们可以通过变量来设置一个链接，变量赋值在文档末尾进行： 显示结果如下： 这个链接用 1 作为网址变量 [Google][1] 这个链接用 bornforthi 作为网址变量 [bornforthi][bornforthi] 然","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/SixMarkdownlink","/column/md/SixMarkdownlink.md"]],
  ["v-2af0098e","/column/md/fourmarkdownblock.html",{"title":"04-Markdown 区块","type":"article","readingTime":{"minutes":1.66,"words":498},"excerpt":"你好，我是悦创。 Markdown 区块引用是在段落开头使用 > 符号 ，然后后面紧跟一个空格符号： 显示结果如下： \" 区块引用\" \" 流沙教程\" \" 学的不仅是技术更是梦想\" \" 一股无形的力量！\" 另外区块是可以嵌套的，一个 > 符号是最外层，两个 > 符号是第一层嵌套，以此类推： 显示结果如下： \" 最外层\" \" > 第一层嵌套\" \" >\" \" > ","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/fourmarkdownblock","/column/md/fourmarkdownblock.md"]],
  ["v-7357cf1b","/column/md/Tensupplement.html",{"title":"10-补充","type":"article","readingTime":{"minutes":0.74,"words":221},"excerpt":"你好，我是悦创。 \" 流沙团队推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！\" \"\" ","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/Tensupplement","/column/md/Tensupplement.md"]],
  ["v-23e5dacf","/column/md/EightMarkdownform.html",{"title":"08-Markdown 表格","type":"article","readingTime":{"minutes":1.22,"words":365},"excerpt":"你好，我是悦创。 Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。 语法格式如下： 以上代码显示结果如下： 表头 表头 ------ ------ 单元格 单元格 单元格 单元格 对齐方式 我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。; :- 设置内容和标题栏居左对齐。; :-: 设置内容和标题栏居中对","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/EightMarkdownform","/column/md/EightMarkdownform.md"]],
  ["v-12253ba4","/column/jysf/stacklastinfirstoutdatastructure.html",{"title":"05-【久远讲算法】栈——后进先出的数据结构","type":"article","readingTime":{"minutes":6.41,"words":1923},"excerpt":"你好我是久远，我们先来复习一下上周我们讲的知识。 什么是链表？; 在计算机科学中，链表是一种常见的基础数据结构，是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的指针。 链表的优点; 由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比数组快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而顺序表","author":"久远","category":["久远讲算法"],"sticky":false},["/column/jysf/stacklastinfirstoutdatastructure","/column/jysf/stacklastinfirstoutdatastructure.md"]],
  ["v-5ac1edb8","/column/jysf/TwoWhatisspatialcomplexity.html",{"title":"02-【久远讲算法】 什么是空间复杂度？","type":"article","readingTime":{"minutes":13.12,"words":3936},"excerpt":"你好，我是久远，这周我们继续聊算法，接着上次的时间复杂度，我们进行关于空间复杂度的讲解。 知识回顾 首先，我们来对上周的任务进行大概的复习。 算法是什么？ 从理论层面来讲，算法就是我们写程序写代码的优化手册，它教会我们怎么让代码运行起来更快，或者占用的内存空间更少。直观层面来讲便是，算法是一系列程序指令，用于处理特定的运算和逻辑问题。一个算法是好是坏，我们通","author":"久远","category":["久远讲算法"],"sticky":false},["/column/jysf/TwoWhatisspatialcomplexity","/column/jysf/TwoWhatisspatialcomplexity.md"]],
  ["v-6a2003e6","/column/jysf/",{"title":"久远讲算法","icon":"home","type":"home","readingTime":{"minutes":0.6,"words":181},"excerpt":"久远讲算法专栏，利用 Python 来系统的讲解数据结构与算法，主要分为基础篇和提高篇，基础篇包含了数据结构和算法的基本内容，适用对象为：0 基础学习编程的读者，对 Python 有一定的了解想要提高自身编程水平的读者。提高篇主要以力扣题目为核心，对算法进行详细讲解。"},["/column/jysf/index.html","/column/jysf/README.md"]],
  ["v-10d1dab0","/column/jysf/Arraythesimplestdatastructure.html",{"title":"03- 【久远讲算法】数组——最简单的数据结构","type":"article","readingTime":{"minutes":15.11,"words":4532},"excerpt":"前言： 前面两篇文章，我们对算法以及时空复杂度进行了详细的讲解，但是，这其实是远远不够的，时空复杂度只是我们算法学习中的冰山一角，下面让我们通过数组的学习来正式打开算法与数据结构的大门吧！ 以下是我之后文章的具体走向，感兴趣的小伙伴可以跟着路线进行自学哦！基础篇暂定走向为：数组→链表→栈和队列→树→递归 基础篇更完以后我将会开启力扣刷题套路篇哦，带大家一起提","author":"久远","category":["久远讲算法"],"sticky":false},["/column/jysf/Arraythesimplestdatastructure","/column/jysf/Arraythesimplestdatastructure.md"]],
  ["v-bf83de84","/column/md/oneMarkdowntitle.html",{"title":"01-Markdown 标题","type":"article","readingTime":{"minutes":1.03,"words":308},"excerpt":"你好，我是悦创。 Markdown 标题有两种格式。 1、使用 = 和 - 标记一级和二级标题 = 和 - 标记语法格式如下： 显示效果如下图： 2. 使用 # 号标记 使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。 显示效果如下图： \" 流沙团队推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班","author":"AI悦创","category":["Markdown 基础"],"sticky":false},["/column/md/oneMarkdowntitle","/column/md/oneMarkdowntitle.md"]],
  ["v-6eb581e6","/column/jysf/0neWhatistimecomplexity.html",{"title":"01-【久远讲算法】什么是时间复杂度？","type":"article","readingTime":{"minutes":8.27,"words":2482},"excerpt":"大家好 ，我是久远，今天开始，由我来给大家分享算法以及数据结构的相关知识。 什么是算法 今天我们先来讨论一个问题：什么是算法？ 算法是指计算方法么？并不准确。 算法这个名称虽然听着硬核，但是我们换个场景你就会非常熟悉。 小学数学课上，你是不是可以用 3+3+3 或者 3*3 来解决三个三相加这个问题，虽然算的结果都是9，但是中间我们用的方法是不一样的。 假如","author":"久远","category":["久远讲算法"],"sticky":false},["/column/jysf/0neWhatistimecomplexity","/column/jysf/0neWhatistimecomplexity.md"]],
  ["v-ae4445d0","/column/jysf/Linkedlisttoimplementanunorderedlist.html",{"title":"04-【久远讲算法】链表——实现无序列表","type":"article","readingTime":{"minutes":15.05,"words":4516},"excerpt":"你好，我是久远，上周开始我们算是正式入门了数据结构，进行了数组的讲解。 我们现在来总结回顾一下数组的知识。 数组是什么？; 是由相同类型的元素的集合所组成的数据结构，分配一块连续的内存来存储。利用元素的索引（index）可以计算出该元素对应的存储地址。 数组的储存类型; 顺序存储：数组在内存中的顺序存储，具体是什么样子呢？ 内存是由一个个连续的内存单元组成的","author":"久远","category":["久远讲算法"],"sticky":false},["/column/jysf/Linkedlisttoimplementanunorderedlist","/column/jysf/Linkedlisttoimplementanunorderedlist.md"]],
]

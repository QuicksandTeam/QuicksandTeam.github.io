(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{554:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("你好，我是悦创。")]),s._v(" "),a("p",[s._v("上节课我带着大家来让 Python 在我们的电脑上安家落户。既然安装成功了，那么使用起来也不是问题。运行 Python 代码有两种方式。一种是直接在 Python 解释器中的输入代码，然后就地执行它（也就是交互模式）。另一种是把 Python 代码保存到文件中，之后去执行这个文件。")]),s._v(" "),a("h2",{attrs:{id:"_1-交互模式执行-python-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-交互模式执行-python-代码"}},[s._v("#")]),s._v(" 1. 交互模式执行 Python 代码")]),s._v(" "),a("p",[s._v("先来看下如何在交互模式下执行 Python 代码。首先进入 Python 解释器交互模式，进入方法是：")]),s._v(" "),a("ul",[a("li",[s._v("使用 Linux 和 MacOS 的读者在命令行（虚拟终端）中执行命令 python3")]),s._v(" "),a("li",[s._v("使用 Windows 的读者在命令行（CMD）中执行命令 python")])]),s._v(" "),a("p",[s._v("之后你会看一些版本和帮助信息：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" python3 Python "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.7")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("09")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Clang "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("clang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".46")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" on darwin\nType “"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("help")]),s._v("”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" “copyright”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" “credits” "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("or")]),s._v(" “license” "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" more information"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这便是 Python 解释器交互模式，上例中左下角的 >>> 表示这里是输入代码的地方，此时正在等待你的输入。试着输入一些内容，然后按回车键去执行它：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54321")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54321")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("66666")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apple'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pen'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apple'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pen'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'applepen'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("可以看到，按下回车键后解释器会立即执行刚才输入的代码，并直接将执行结果输出出来。")]),s._v(" "),a("h2",{attrs:{id:"_2-执行-python-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行-python-文件"}},[s._v("#")]),s._v(" 2. 执行 Python 文件")]),s._v(" "),a("p",[s._v("再来看下如何执行 Python 文件。所谓 Python 文件，其实就是保存 Python 代码的文件，通常将其文件后缀名约定为 "),a("code",[s._v(".py")]),s._v("。")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("扩展")]),s._v(" "),a("blockquote",[a("p",[s._v("其实用别的后缀名甚至不用后缀名都是可以的，但是既然是约定，那么大家就该遵守。"),a("code",[s._v(".py")]),s._v(" 后缀能很清晰的表明这是 Python 文件。")])])]),s._v(" "),a("p",[s._v("我们来创建一个文件，如 "),a("code",[s._v("today.py")]),s._v("，然后把以下代码拷贝进去：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" datetime\n\ntoday "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strftime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y{}%m{}%d{}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'年月日'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'今天是：'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后通过 Python 命令来执行这个 "),a("code",[s._v("today.py")]),s._v(" 文件：")]),s._v(" "),a("ul",[a("li",[s._v("Windows 下执行：")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("python today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" python today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n今天是："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("年"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("月"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("03")]),s._v("日\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("Linux 和 MacOS 下执行：")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("python3 today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" python3 today"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n今天是："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("年"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("月"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("03")]),s._v("日\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("上述文件使用的是省略了路径前缀的相对路径形式，执行命令前须先进入到 Python 文件所在目录（即确保工作目录和文件所在目录一致），否则解释器会找不到该文件。也可以直接使用绝对路径的形式，如 "),a("code",[s._v("python C:\\Users\\aiyuechuang\\today.py")]),s._v("，此时无需考虑工作目录。")])]),s._v(" "),a("h2",{attrs:{id:"_3-交互模式执行和-python-文件执行的差别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-交互模式执行和-python-文件执行的差别"}},[s._v("#")]),s._v(" 3. 交互模式执行和 Python 文件执行的差别")]),s._v(" "),a("p",[s._v("显而易见，Python 代码的交互模式执行和文件执行在使用形式上是不同的。除此之外，在输出结果的方式上这两种方法也存在一些不同。")]),s._v(" "),a("p",[s._v("比如代码：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54321")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在交互模式下执行时，计算结果会被直接输出出来：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54321")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("66666")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这里我们没有使用任何输出操作，代码执行时计算出结果并自动输出。")]),s._v(" "),a("p",[s._v("而如果把这行代码写到文件里（如 "),a("code",[s._v("add.py")]),s._v("），然后使用文件执行的方式来执行它，这时命令行中没有任何内容被输出显示。如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" python3 add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这是因为文件执行时，每个语句的执行结果并不会被自动输出，"),a("strong",[s._v("除非代码中有明确的输出操作")]),s._v("。")]),s._v(" "),a("p",[s._v("**这输出操作具体是什么呢？**比如 Python 里有个叫 "),a("code",[s._v("print()")]),s._v(" 函数的东西，它可以把结果输出显示到命令行中。使用时只需将想要输出的内容放在 "),a("code",[s._v("print()")]),s._v(" 的括号中，像这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54321")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("好了，我们修改下文件中的代码，用 "),a("code",[s._v("print(12345 + 54321)")]),s._v(" 完整替换原来的 "),a("code",[s._v("12345 + 54321")]),s._v("，再次执行下看看：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" python3 add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("66666")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这样结果就显示出来了。交互模式下当然也可以使用 "),a("code",[s._v("print()")]),s._v("，效果也是一样的。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：代码中的所有符号，包括括号"),a("code",[s._v("「()」")]),s._v("、逗号"),a("code",[s._v("「,」")]),s._v("、分号"),a("code",[s._v("「;」")]),s._v("等必须使用英文半角符号，否则程序会出错。")])]),s._v(" "),a("blockquote",[a("p",[s._v("扩展："),a("code",[s._v("print()")]),s._v(" 是 Python 的内置函数（函数概念后续会提到），无需从包（程序库）中导入。准确来讲，它的行为是将内容写到标准输出中。")])]),s._v(" "),a("h2",{attrs:{id:"_4-交互模式-or-python-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-交互模式-or-python-文件"}},[s._v("#")]),s._v(" 4. 交互模式 or Python 文件？")]),s._v(" "),a("p",[s._v("在做 Python 开发时，大多数时候都是用执行 Python 文件的方式来运行代码。交互模式往往只是在试验小段代码，或者用 Python 做一些简单事情的时候才会去使用。原因是：")]),s._v(" "),a("ul",[a("li",[s._v("大多数场景下，我们的程序需要以自动化的方式来运行，而交互模式顾名思义是需要人的参与的，不便于自动化；")]),s._v(" "),a("li",[s._v("把代码写到文件里方便反复执行；")]),s._v(" "),a("li",[s._v("交互模式下的输入体验不佳，编写大段代码时不够便利；")])]),s._v(" "),a("h2",{attrs:{id:"_5-趁手的代码编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-趁手的代码编辑器"}},[s._v("#")]),s._v(" 5. 趁手的代码编辑器")]),s._v(" "),a("p",[s._v("执行 Python 文件是运行 Python 代码的主要方式，正因为如此，我们需要一个好用的编辑器来编写 Python 文件，毕竟系统自带的文本编辑器太简陋了。")]),s._v(" "),a("p",[s._v("用来写代码的编辑器实在很多，比如老牌的 VIM、Emacs，之后的 Atom、Sublime，以及新秀 VS code。除此之外，还可以用重量级的 IDE（Integrated Development Environment——集成开发环境）。")]),s._v(" "),a("blockquote",[a("p",[s._v("扩展：编辑器通常有代码编辑、高亮显示、基于历史记录的代码补全等功能。IDE 在编辑器的基础上还支持基于静态分析的代码补全，引用查看，代码跳转，重构，代码格式化，编辑时错误提示，风格提示等强大且常用的功能。")])]),s._v(" "),a("blockquote",[a("p",[s._v("编辑器能通过插件来扩展得到这些功能，但需要经历一番折腾。想省些力气的读者可以直接用 IDE 来做开发。")])]),s._v(" "),a("p",[s._v("这里分别推荐一款代码编辑和一款 IDE：")]),s._v(" "),a("ul",[a("li",[s._v("VS code，微软开源的优秀代码编辑器。 "),a("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方下载页面"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huangjiabaoaiyc/image/raw/master/202111031142547.png",alt:"image.png"}})]),s._v(" "),a("ul",[a("li",[s._v("PyCharm。它是 Python 领域口碑和人气双高的 IDE。有付费的个人版本和免费的社区版本，我们使用社区版本就足够了。"),a("a",{attrs:{href:"https://www.jetbrains.com/pycharm/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方下载页面"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huangjiabaoaiyc/image/raw/master/202111031142875.png",alt:"image.png"}})]),s._v(" "),a("h1",{attrs:{id:"_6-本专栏代码演示说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-本专栏代码演示说明"}},[s._v("#")]),s._v(" 6. 本专栏代码演示说明")]),s._v(" "),a("p",[s._v("值得说明的是，后续文章中的代码执行演示以交互模式为主。交互模式的典型标记是 >>> 提示符，如下示例就是在解释器交互模式下进行的：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("725")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("758")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("另外在代码较长时，本专栏也会使用执行 Python 文件的方式来作代码执行演示。此时的典型标记是 "),a("code",[s._v("➜ ~")]),s._v("，表明这是在命令行（即 Windows CMD 或 Llinux / MacOS 虚拟终端）中执行命令。如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" python3 hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("py\nhello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("说明：上述使用的是 Linux / MacOS 下的 python3 命令，使用 Windows 的读者请自行替换为 python。")]),s._v(" "),a("p",[s._v("当然！我有时候更喜欢使用 IPython 来开发。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("In "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nOut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nIn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello QuickSand"')]),s._v("\nOut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello QuickSand'")]),s._v("\n\nIn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这是本专栏的代码演示形式。读者自己试验代码时，是选择交互模式还是 Python 文件的方式完全由个人喜好而定。如果使用 Python 文件的方式，请不要忘记想要输出执行结果需要在代码里使用 "),a("code",[s._v("print()")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("流沙团队推出辅导班啦，包括「Python 语言辅导班、C++ 辅导班、java 辅导班、算法/数据结构辅导班、少儿编程、pygame 游戏开发」，全部都是一对一教学：一对一辅导 + 一对一答疑 + 布置作业 + 项目实践等。当然，还有线下线上摄影课程、Photoshop、Premiere 一对一教学、QQ、微信在线，随时响应！")]),s._v(" "),a("p",[s._v("方法一："),a("a",{attrs:{href:"http://wpa.qq.com/msgrd?v=3&uin=1432803776&site=qq&menu=yes",target:"_blank",rel:"noopener noreferrer"}},[s._v("QQ"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("方法二：微信：Jiabcdefh")])])])}),[],!1,null,null,null);t.default=e.exports}}]);